import { Suspense } from 'react'
import { getCourseTemplates, getExamTemplates, getDigitalProductTemplates, getTemplateStats } from '@/lib/actions/templates'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
import {
  Edit,
  FileText,
  Plus,
  GraduationCap,
  ClipboardCheck,
  Package,
  TrendingUp,
  Settings,
  DollarSign
} from 'lucide-react'
import Link from 'next/link'

function formatCurrency(amount: number) {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD'
  }).format(amount)
}

async function TemplateStats() {
  const stats = await getTemplateStats()

  return (
    <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Course Templates</CardTitle>
          <GraduationCap className="h-4 w-4 text-muted-foreground" />
        </CardHeader>
        <CardContent>
          <div className="text-2xl font-bold">{stats.activeCourseTemplates}</div>
          <p className="text-xs text-muted-foreground">
            Active WSET course templates
          </p>
        </CardContent>
      </Card>
      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Exam Templates</CardTitle>
          <ClipboardCheck className="h-4 w-4 text-muted-foreground" />
        </CardHeader>
        <CardContent>
          <div className="text-2xl font-bold">{stats.activeExamTemplates}</div>
          <p className="text-xs text-muted-foreground">
            Spot exam templates
          </p>
        </CardContent>
      </Card>
      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Product Templates</CardTitle>
          <Package className="h-4 w-4 text-muted-foreground" />
        </CardHeader>
        <CardContent>
          <div className="text-2xl font-bold">{stats.activeDigitalProductTemplates}</div>
          <p className="text-xs text-muted-foreground">
            Tasting kits, materials, etc.
          </p>
        </CardContent>
      </Card>
      <Card>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
          <CardTitle className="text-sm font-medium">Auto-Generated</CardTitle>
          <TrendingUp className="h-4 w-4 text-muted-foreground" />
        </CardHeader>
        <CardContent>
          <div className="text-2xl font-bold">{stats.recentAutoGeneratedSessions}</div>
          <p className="text-xs text-muted-foreground">
            Recent auto products
          </p>
        </CardContent>
      </Card>
    </div>
  )
}

async function CourseTemplatesTab() {
  const templates = await getCourseTemplates()

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold">WSET Course Templates</h3>
          <p className="text-sm text-muted-foreground">
            Templates for instructor-led WSET courses. Sessions created from these templates auto-generate products.
          </p>
        </div>
        <Button size="sm" asChild>
          <Link href="/dashboard/course-templates/course/new">
            <Plus className="mr-2 h-4 w-4" />
            Add Template
          </Link>
        </Button>
      </div>

      <div className="grid gap-4 md:grid-cols-2">
        {templates.map((template) => (
          <Card key={template.id} className="relative">
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <Badge variant="outline">
                  WSET Level {template.wset_level}
                </Badge>
                <div className="flex gap-1">
                  <Button variant="ghost" size="sm" asChild>
                    <Link href={`/dashboard/course-templates/course/${template.id}/edit`}>
                      <Edit className="h-4 w-4" />
                    </Link>
                  </Button>
                  <Button variant="ghost" size="sm" asChild>
                    <Link href={`/dashboard/course-templates/course/${template.id}`}>
                      <Settings className="h-4 w-4" />
                    </Link>
                  </Button>
                </div>
              </div>
              <CardTitle className="text-base line-clamp-2">
                {template.name}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="text-sm text-muted-foreground line-clamp-2">
                {template.description}
              </div>
              <div className="grid grid-cols-2 gap-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-muted-foreground">Duration:</span>
                  <span>{template.duration_weeks}w</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-muted-foreground">Capacity:</span>
                  <span>{template.max_capacity}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-muted-foreground">Base Price:</span>
                  <span>{template.base_price ? formatCurrency(template.base_price) : 'TBA'}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-muted-foreground">Early Bird:</span>
                  <span>{template.early_bird_discount_percent}% off</span>
                </div>
              </div>
              <div className="flex items-center gap-2 pt-2">
                <Badge variant={template.is_active ? 'default' : 'secondary'} className="text-xs">
                  {template.is_active ? 'Active' : 'Inactive'}
                </Badge>
                {template.auto_create_products && (
                  <Badge variant="outline" className="text-xs">
                    Auto Products
                  </Badge>
                )}
                {template.stripe_sync_enabled && (
                  <Badge variant="outline" className="text-xs">
                    Stripe Sync
                  </Badge>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {templates.length === 0 && (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12">
            <GraduationCap className="h-12 w-12 text-muted-foreground mb-4" />
            <h3 className="text-lg font-semibold mb-2">No course templates found</h3>
            <p className="text-muted-foreground text-center mb-4">
              Course templates will be automatically created when you run the database migration.
            </p>
          </CardContent>
        </Card>
      )}
    </div>
  )
}

async function ExamTemplatesTab() {
  const templates = await getExamTemplates()

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold">Exam Templates</h3>
          <p className="text-sm text-muted-foreground">
            Templates for spot exams and retakes. Auto-generate products when exams are scheduled.
          </p>
        </div>
        <Button size="sm" asChild>
          <Link href="/dashboard/course-templates/exam/new">
            <Plus className="mr-2 h-4 w-4" />
            Add Template
          </Link>
        </Button>
      </div>

      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
        {templates.map((template) => (
          <Card key={template.id}>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <Badge variant="outline">
                  WSET Level {template.wset_level}
                </Badge>
                <Button variant="ghost" size="sm" asChild>
                  <Link href={`/dashboard/course-templates/exam/${template.id}/edit`}>
                    <Edit className="h-4 w-4" />
                  </Link>
                </Button>
              </div>
              <CardTitle className="text-base line-clamp-2">
                {template.name}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-2">
              <div className="text-sm text-muted-foreground capitalize">
                {template.exam_type} â€¢ {template.duration_minutes} min
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-muted-foreground">Price:</span>
                <span>{formatCurrency(template.base_price)}</span>
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-muted-foreground">Capacity:</span>
                <span>{template.max_capacity} candidates</span>
              </div>
              <div className="flex items-center gap-2 pt-2">
                <Badge variant={template.is_active ? 'default' : 'secondary'} className="text-xs">
                  {template.is_active ? 'Active' : 'Inactive'}
                </Badge>
                <Badge variant="outline" className="text-xs capitalize">
                  {template.location_type}
                </Badge>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {templates.length === 0 && (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12">
            <ClipboardCheck className="h-12 w-12 text-muted-foreground mb-4" />
            <h3 className="text-lg font-semibold mb-2">No exam templates found</h3>
            <p className="text-muted-foreground text-center mb-4">
              Exam templates will be created when you run the database migration.
            </p>
          </CardContent>
        </Card>
      )}
    </div>
  )
}

async function DigitalProductTemplatesTab() {
  const templates = await getDigitalProductTemplates()

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold">Digital & Physical Products</h3>
          <p className="text-sm text-muted-foreground">
            Templates for tasting kits, study materials, merchandise, and gift vouchers.
          </p>
        </div>
        <Button size="sm" asChild>
          <Link href="/dashboard/course-templates/product/new">
            <Plus className="mr-2 h-4 w-4" />
            Add Template
          </Link>
        </Button>
      </div>

      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
        {templates.map((template) => (
          <Card key={template.id}>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <Badge variant="outline" className="capitalize">
                  {template.category.replace('_', ' ')}
                </Badge>
                <Button variant="ghost" size="sm" asChild>
                  <Link href={`/dashboard/course-templates/product/${template.id}/edit`}>
                    <Edit className="h-4 w-4" />
                  </Link>
                </Button>
              </div>
              <CardTitle className="text-base line-clamp-2">
                {template.name}
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-2">
              <div className="text-sm text-muted-foreground line-clamp-2">
                {template.description}
              </div>
              <div className="flex justify-between text-sm">
                <span className="text-muted-foreground">Price:</span>
                <span className="font-medium">{formatCurrency(template.base_price)}</span>
              </div>
              {template.wset_level && (
                <div className="flex justify-between text-sm">
                  <span className="text-muted-foreground">WSET Level:</span>
                  <span>{template.wset_level}</span>
                </div>
              )}
              <div className="flex items-center gap-2 pt-2">
                <Badge variant={template.is_active ? 'default' : 'secondary'} className="text-xs">
                  {template.is_active ? 'Active' : 'Inactive'}
                </Badge>
                <Badge variant="outline" className="text-xs">
                  {template.is_physical ? 'Physical' : 'Digital'}
                </Badge>
                {template.inventory_tracked && (
                  <Badge variant="outline" className="text-xs">
                    Tracked
                  </Badge>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {templates.length === 0 && (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12">
            <Package className="h-12 w-12 text-muted-foreground mb-4" />
            <h3 className="text-lg font-semibold mb-2">No product templates found</h3>
            <p className="text-muted-foreground text-center mb-4">
              Product templates will be created when you run the database migration.
            </p>
          </CardContent>
        </Card>
      )}
    </div>
  )
}

export default function CourseTemplatesPage() {
  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold tracking-tight">Template Management</h1>
          <p className="text-muted-foreground">
            Manage templates that auto-generate products when courses and exams are scheduled
          </p>
        </div>
      </div>

      <Suspense fallback={
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
          {[...Array(4)].map((_, i) => (
            <Card key={i}>
              <CardHeader>
                <div className="h-4 bg-muted rounded animate-pulse" />
              </CardHeader>
              <CardContent>
                <div className="h-8 bg-muted rounded animate-pulse mb-2" />
                <div className="h-3 bg-muted rounded animate-pulse" />
              </CardContent>
            </Card>
          ))}
        </div>
      }>
        <TemplateStats />
      </Suspense>

      <Tabs defaultValue="courses" className="space-y-4">
        <TabsList>
          <TabsTrigger value="courses">
            <GraduationCap className="mr-2 h-4 w-4" />
            Course Templates
          </TabsTrigger>
          <TabsTrigger value="exams">
            <ClipboardCheck className="mr-2 h-4 w-4" />
            Exam Templates
          </TabsTrigger>
          <TabsTrigger value="products">
            <Package className="mr-2 h-4 w-4" />
            Product Templates
          </TabsTrigger>
        </TabsList>

        <TabsContent value="courses">
          <Suspense fallback={<div className="text-center py-12">Loading course templates...</div>}>
            <CourseTemplatesTab />
          </Suspense>
        </TabsContent>

        <TabsContent value="exams">
          <Suspense fallback={<div className="text-center py-12">Loading exam templates...</div>}>
            <ExamTemplatesTab />
          </Suspense>
        </TabsContent>

        <TabsContent value="products">
          <Suspense fallback={<div className="text-center py-12">Loading product templates...</div>}>
            <DigitalProductTemplatesTab />
          </Suspense>
        </TabsContent>
      </Tabs>

      <Card>
        <CardHeader>
          <CardTitle>How the Opinionated Product System Works</CardTitle>
        </CardHeader>
        <CardContent className="prose prose-sm max-w-none">
          <div className="grid gap-6 md:grid-cols-3">
            <div>
              <h4 className="font-semibold mb-2 flex items-center gap-2">
                <GraduationCap className="h-4 w-4" />
                1. Configure Templates
              </h4>
              <p className="text-sm text-muted-foreground">
                Phillip configures course templates, exam templates, and product templates with standard pricing, capacity, and settings.
              </p>
            </div>
            <div>
              <h4 className="font-semibold mb-2 flex items-center gap-2">
                <Settings className="h-4 w-4" />
                2. Schedule Sessions
              </h4>
              <p className="text-sm text-muted-foreground">
                When Phillip schedules a course session or exam, the system automatically creates a matching product with intelligent naming and pricing.
              </p>
            </div>
            <div>
              <h4 className="font-semibold mb-2 flex items-center gap-2">
                <DollarSign className="h-4 w-4" />
                3. Auto Stripe Sync
              </h4>
              <p className="text-sm text-muted-foreground">
                Products are automatically synced to Stripe with proper pricing, early bird discounts, and metadata for seamless e-commerce.
              </p>
            </div>
          </div>
          <div className="mt-6 p-4 bg-muted rounded-lg">
            <p className="text-sm font-medium mb-2">Benefits of this approach:</p>
            <ul className="text-sm text-muted-foreground space-y-1">
              <li>â€¢ <strong>No manual product creation</strong> - Products are generated automatically</li>
              <li>â€¢ <strong>Consistent pricing</strong> - Based on WSET level and template settings</li>
              <li>â€¢ <strong>Intelligent naming</strong> - Includes dates, location, and course details</li>
              <li>â€¢ <strong>Stripe integration</strong> - Automatic sync with proper metadata</li>
              <li>â€¢ <strong>Template-driven</strong> - Easy to maintain and update pricing across all products</li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}